name: Telegram Notify Workflow

on:
  issues:
    types: [opened]  # Trigger bei neuem Issue
  workflow_dispatch:  # Optional: Manuell triggern fÃ¼r Tests
    inputs:
      message:  # Eingabe fÃ¼r dynamische Nachricht
        description: 'Markdown-Nachricht-Inhalt'
        required: false
        default: 'ðŸš¨ **Neue Benachrichtigung!** \n\n- **Titel**: Beispiel-Titel\n- **Details**: Hier kommt dein Markdown-Inhalt hin.\n- **Link**: [Klicke hier](https://example.com)\n\nMehr Infos folgen.'

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-telegram-bot==20.7  # Explizite Version fÃ¼r StabilitÃ¤t
          pip list  # Debugging: Zeigt installierte Pakete
      
      - name: Run Notify Script
        env:
          AIRTABLE_TOKEN: ${{ secrets.AIRTABLE_TOKEN }}
          AIRTABLE_NOTIFICATION_BASE: ${{ secrets.AIRTABLE_NOTIFICATION_BASE }}
          AIRTABLE_NOTIFICATION_TBL: ${{ secrets.AIRTABLE_NOTIFICATION_TBL }}
          AIRTABLE_BASE_2025: ${{ secrets.AIRTABLE_BASE_2025 }}
          AIRTABLE_TBL_2025: ${{ secrets.AIRTABLE_TBL_2025 }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        run: |
          MESSAGE="${{ github.event.inputs.message || format('ðŸš¨ **Neues Issue!**\n\n- **Titel**: {0}\n- **Link**: {1}', github.event.issue.title, github.event.issue.html_url) }}"
          python scripts/notify.py "$MESSAGE"